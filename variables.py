from text import baa_list
from main import *
from handlers import *
from states import *
import random


def get_recommended_baas(user_data):
    recommended_baas = []
    age_range = user_data.get("age")
    if age_range:
        if age_range[0] == 0:
            recommended_baas.extend(["üåøIodiumKelp", "üçÉSpirulina"])
        elif age_range[0] == 18:
            recommended_baas.extend(
                [
                    "ü¶™Squalene",
                    "üç§CardioMarine",
                    "üåäVitaMarine A",
                    "üåäVitaMarine B",
                    "üåøIodiumKelp",
                    "üçÉAshitaba",
                    "ü•ïCaroten",
                    "üçÉSpirulina",
                    "üçÉChlorella",
                ]
            )
        elif age_range[0] == 35:
            recommended_baas.extend(["üçÉAshitaba", "ü¶™Squalene"])

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:
    if user_data.get("vegetable_intake") == "often":
        recommended_baas.append("üåøZostera")
    elif user_data.get("vegetable_intake") == "rarely":
        recommended_baas.extend(["üçÉSpirulina", "üçÉAshitaba", "üåøZostera"])

    if user_data.get("fatigue") == "often":
        recommended_baas.extend(
            [
                "ü¶™Squalene",
                "üç§CardioMarine",
                "üåäVitaMarine A",
                "üåäVitaMarine B",
                "üåøIodiumKelp",
            ]
        )
    elif user_data.get("fatigue") == "rarely":
        recommended_baas.extend(["üçÉAshitaba", "ü•ïCaroten"])

    if user_data.get("seafood") == "often":
        recommended_baas.append("üçÉAshitaba")
    elif user_data.get("seafood") == "rarely":
        recommended_baas.extend(
            [
                "üåäVitaMarine A",
                "üåäVitaMarine B",
                "üåøIodiumKelp",
                "üçÉSpirulina",
                "üçÉChlorella",
                "ü¶™Squalene",
            ]
        )
    if user_data.get("memory_issues") == "often":
        recommended_baas.extend(["üç§CardioMarine", "üåäVitaMarine B", "üåøIodiumKelp"])
    elif user_data.get("memory_issues") == "sometimes":
        recommended_baas.extend(["üç§CardioMarine", "üåäVitaMarine B", "üåøIodiumKelp"])
    else:
        recommended_baas.extend(["üçÉSpirulina", "üçÉChlorella"])

    # –ü—Ä–æ–±–ª–µ–º—ã —Å–æ –∑—Ä–µ–Ω–∏–µ–º:
    if user_data.get("vision_issues") == "yes":
        recommended_baas.extend(["ü•ïCaroten", "üåäVitaMarine B"])
    else:
        recommended_baas.append("üåøIodiumKelp")

    # –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ–¥ —ç–∫—Ä–∞–Ω–∞–º–∏:
    if user_data.get("screen_time") == "often":
        recommended_baas.extend(["ü•ïCaroten", "üåäVitaMarine B"])
    else:
        recommended_baas.append("üçÉAshitaba")

    # –ü—Ä–æ–±–ª–µ–º—ã —Å —Å—É—Å—Ç–∞–≤–∞–º–∏:
    if user_data.get("joint_issues") == "yes":
        recommended_baas.extend(["üç§ArtroMarine", "ü¶™Squalene"])
    else:
        recommended_baas.append("üçÉChlorella")

    # –ê–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Ä—Ç:
    if user_data.get("active_sport") == "yes":
        recommended_baas.extend(["üç§ArtroMarine", "üçÉSpirulina", "ü¶™Squalene"])
    else:
        recommended_baas.append("üçÉChlorella")

    # –û–Ω–µ–º–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–ª—ã–≤–∞–Ω–∏—è:
    if user_data.get("numbness_tingling") == "often":
        recommended_baas.append("üç§CardioMarine")
    else:
        recommended_baas.append("üçÉChlorella")

    # –ì–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏:
    if user_data.get("headaches") == "often":
        recommended_baas.extend(["üç§CardioMarine", "üåäVitaMarine A"])
    else:
        recommended_baas.append("ü•ïCaroten")

    # –ñ–µ–ª–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–æ–ª–æ–¥–æ—Å—Ç—å:
    if user_data.get("youth_importance") == "yes":
        recommended_baas.extend(
            ["üçÉAshitaba", "üåäVitaMarine A", "üåäVitaMarine B", "üçÉSpirulina"]
        )

    # –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏:
    if user_data.get("detox_need") == "yes":
        recommended_baas.extend(["üçÉAshitaba", "üçÉChlorella", "üåøZostera"])
    else:
        recommended_baas.extend(
            ["üåäVitaMarine A", "üåäVitaMarine B", "üçÉSpirulina", "üåøIodiumKelp", "ü•ïCaroten"]
        )

    # –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ–º:
    if user_data.get("digestion_issues") == "yes":
        recommended_baas.extend(["üçÉAshitaba", "üåøZostera", "üçÉChlorella"])
    else:
        recommended_baas.extend(
            [
                "üåäVitaMarine A",
                "üåäVitaMarine B",
                "üçÉSpirulina",
                "üåøIodiumKelp",
                "ü•ïCaroten",
                "ü¶™Squalene",
            ]
        )

    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:
    if user_data.get("repro_support") == "repro_support_yes":
        recommended_baas.append("üåøIodiumKelp")
    else:
        recommended_baas.extend(["üçÉAshitaba", "üçÉChlorella", "üåøZostera", "ü¶™Squalene"])

    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫—Ä–∞—Å–æ—Ç—ã:
    if user_data.get("beauty_enhancement") == "beauty_yes":
        recommended_baas.extend(["üç§CardioMarine", "üç§ArtroMarine", "ü¶™Squalene"])
    else:
        recommended_baas.extend(
            ["üçÉAshitaba", "üçÉChlorella", "üçÉSpirulina", "üåøIodiumKelp"]
        )

    recommended_baas = list(set(recommended_baas))
    # –ï—Å–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –±–∞–¥–æ–≤ –±–æ–ª—å—à–µ 3, –≤—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ 3 –∏–∑ –Ω–∏—Ö
    if len(recommended_baas) > 3:
        recommended_baas = random.sample(recommended_baas, 3)

    # –ï—Å–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –±–∞–¥–æ–≤ –º–µ–Ω—å—à–µ 3, –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–µ, —á—Ç–æ–±—ã –∏—Ö —Å—Ç–∞–ª–æ 3
    while len(recommended_baas) < 3:
        baa = random.choice(baa_list)
        if baa not in recommended_baas:
            recommended_baas.append(baa)

    return recommended_baas
